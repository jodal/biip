[project]
name = "biip"
version = "3.6.0"
description = "Biip interprets the data in barcodes."
authors = [{ name = "Stein Magnus Jodal", email = "stein.magnus@jodal.no" }]
requires-python = ">=3.9"
readme = "README.md"
license = "Apache-2.0"
keywords = ["barcodes", "ean", "isbn", "gs1", "gtin", "upc"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries",
]

[project.optional-dependencies]
money = ["py-moneyed>=0.8"]

[project.urls]
Homepage = "https://github.com/jodal/biip"
Repository = "https://github.com/jodal/biip"
Documentation = "https://biip.readthedocs.io"

[dependency-groups]
dev = [
    "tox>=4.21.2",
    "tox-uv>=1.23.2",
    { include-group = "docs" },
    { include-group = "mypy" },
    { include-group = "pyright" },
    { include-group = "ruff" },
    { include-group = "tests" },
    { include-group = "scripts" },
]
docs = ["sphinx>=7", "sphinx-rtd-theme>=2", "sphinx-autodoc-typehints>=2"]
mypy = ["mypy==1.15.0"]
pyright = ["pyright==1.1.394"]
ruff = ["ruff==0.9.6"]
scripts = [
    "beautifulsoup4>=4.13.3",
    "httpx>=0.28.1",
    "types-beautifulsoup4>=4.12.0.20250204",
]
tests = [
    "coverage>=7.6.12",
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "xdoctest>=1.2.0",
]


[tool.coverage.paths]
source = ["src"]

[tool.coverage.run]
branch = true
source = ["biip"]

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "if TYPE_CHECKING:"]
fail_under = 100
show_missing = true


[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--xdoc"
filterwarnings = ["ignore:pygments is not installed.*:UserWarning"]


[tool.mypy]
no_implicit_optional = true
warn_return_any = true
warn_redundant_casts = true
warn_unused_configs = true
strict_equality = true

[[tool.mypy.overrides]]
module = "biip.*"
disallow_untyped_defs = true


[tool.pyright]
pythonVersion = "3.9"
typeCheckingMode = "strict"
# Already covered by tests and careful import ordering:
reportImportCycles = false
# Already covered by flake8-self:
reportPrivateUsage = false


[tool.ruff]
target-version = "py39"

[tool.ruff.lint]
preview = true
explicit-preview-rules = true
select = [
    "ALL",
    #
    # Preview rules
    "DOC201", # docstring-missing-returns
    "DOC202", # docstring-extraneous-returns
    "DOC402", # docstring-missing-yields
    "DOC403", # docstring-extraneous-yields
    "DOC501", # docstring-missing-exception
]
ignore = [
    "PLR2004", # magic-value-comparison
    "S101",    # assert
    #
    # These rules interfere with `ruff format`
    "COM812", # missing-trailing-comma
    "ISC001", # single-line-implicit-string-concatenation
]

[tool.ruff.lint.per-file-ignores]
"docs/*" = [
    "INP001", # implicit-namespace-package
]
"scripts/*" = [
    "INP001", # implicit-namespace-package
    "T201",   # print
]
"tests/*" = [
    "D",    # pydocstyle
    "S101", # assert
]

[tool.ruff.lint.pydoclint]
ignore-one-line-docstrings = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true


[tool.tox]
env_list = [
    "3.9",
    "3.10",
    "3.11",
    "3.12",
    "3.13",
    "3.14",
    "docs",
    "mypy",
    "pyright",
    "ruff-format",
    "ruff-lint",
]

[tool.tox.env_run_base]
package = "wheel"
wheel_build_env = ".pkg"
dependency_groups = ["tests"]
extras = ["money"]
commands = [
    [
        "pytest",
        "--basetemp={envtmpdir}",
        "--cov=biip",
        "--cov-report=term-missing",
        "{posargs}",
    ],
]

[tool.tox.env.docs]
dependency_groups = ["docs"]
extras = ["money"]
commands = [
    [
        "sphinx-build",
        "--builder",
        "html",
        "--doctree-dir",
        "{envtmpdir}{/}doctrees",
        "docs",
        "{envtmpdir}{/}html",
    ],
]

[tool.tox.env.mypy]
dependency_groups = ["scripts", "tests", "mypy"]
extras = ["money"]
commands = [
    [
        "mypy",
        { replace = "posargs", default = [
            "src",
            "tests",
        ], extend = true },
    ],
]

[tool.tox.env.pyright]
dependency_groups = ["scripts", "tests", "pyright"]
extras = ["money"]
commands = [
    [
        "pyright",
        { replace = "posargs", default = [
            "src",
            "tests",
        ], extend = true },
    ],
]

[tool.tox.env.ruff-format]
skip_install = true
dependency_groups = ["ruff"]
commands = [["ruff", "format", "--check", "{posargs:.}"]]

[tool.tox.env.ruff-lint]
skip_install = true
dependency_groups = ["ruff"]
commands = [["ruff", "check", "{posargs:.}"]]


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
